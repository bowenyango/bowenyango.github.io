<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Novel CS</title>
    <link>https://example.org/docs/systems-and-networking/networking/advanced-concepts/</link>
    <description>Recent content on Novel CS</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://example.org/docs/systems-and-networking/networking/advanced-concepts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://example.org/docs/systems-and-networking/networking/advanced-concepts/forward-routing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/systems-and-networking/networking/advanced-concepts/forward-routing/</guid>
      <description> forwarding and routing # Routing Table # Prefix/Length Next Hop 18/8 171.69.245.10 Forwarding Table # Prefix/Length Interface MAC Address 18/8 if0 8:0:2b:e4:b:1:2 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://example.org/docs/systems-and-networking/networking/advanced-concepts/load-balancing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/systems-and-networking/networking/advanced-concepts/load-balancing/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://example.org/docs/systems-and-networking/networking/advanced-concepts/nat/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/systems-and-networking/networking/advanced-concepts/nat/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://example.org/docs/systems-and-networking/networking/advanced-concepts/sliding_window/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/systems-and-networking/networking/advanced-concepts/sliding_window/</guid>
      <description>Frame Header # typedef uint8_t SwpSeqno; typedef struct { SwpSeqno SeqNum; /* sequence number of this frame */ SwpSeqno AckNum; /* ack of received frame */ uint8_t Flags; /* up to 8 bits worth of flags */ } SwpHdr; Sliding Window Protocol State # typedef struct { /* sender side state: */ SwpSeqno LAR; /* seqno of last ACK received */ SwpSeqno LFS; /* last frame sent */ Semaphore sendWindowNotFull; SwpHdr hdr; /* pre-initialized header */ struct sendQ_slot { Event timeout; /* event associated with send-timeout */ Msg msg; } sendQ[SWS]; /* receiver side state: */ SwpSeqno NFE; /* seqno of next frame expected */ struct recvQ_slot { int received; /* is msg valid?</description>
    </item>
    
    <item>
      <title></title>
      <link>https://example.org/docs/systems-and-networking/networking/advanced-concepts/vpn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/systems-and-networking/networking/advanced-concepts/vpn/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://example.org/docs/systems-and-networking/networking/advanced-concepts/webrtc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/systems-and-networking/networking/advanced-concepts/webrtc/</guid>
      <description>How WebRTC segment and assemble datagram over UDP? # WebRTC (Web Real-Time Communication) incorporates similar principles for handling real-time audio and video streams, but it is more sophisticated and includes additional mechanisms to ensure reliable and efficient communication. Hereâ€™s how WebRTC works and how it handles segmenting and reassembling using UDP:
WebRTC is a protocol suite and set of APIs that enable real-time communication directly between web browsers or other endpoints without requiring an intermediary server for the media exchange.</description>
    </item>
    
  </channel>
</rss>
