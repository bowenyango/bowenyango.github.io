<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Novel CS</title>
    <link>https://example.org/docs/operating-systems/</link>
    <description>Recent content on Novel CS</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://example.org/docs/operating-systems/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://example.org/docs/operating-systems/use-macro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/operating-systems/use-macro/</guid>
      <description>Why do the Linux use macro over function? # int __sys_socket(int family, int type, int protocol) { struct socket *sock; int flags; sock = __sys_socket_create(family, type, update_socket_protocol(family, type, protocol)); if (IS_ERR(sock)) return PTR_ERR(sock); flags = type &amp;amp; ~SOCK_TYPE_MASK; if (SOCK_NONBLOCK != O_NONBLOCK &amp;amp;&amp;amp; (flags &amp;amp; SOCK_NONBLOCK)) flags = (flags &amp;amp; ~SOCK_NONBLOCK) | O_NONBLOCK; return sock_map_fd(sock, flags &amp;amp; (O_CLOEXEC | O_NONBLOCK)); } SYSCALL_DEFINE3(socket, int, family, int, type, int, protocol) { return __sys_socket(family, type, protocol); } The use of macros instead of functions in this code is primarily for performance and code size reasons.</description>
    </item>
    
  </channel>
</rss>
