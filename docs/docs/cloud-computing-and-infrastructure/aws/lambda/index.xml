<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Novel CS</title>
    <link>https://example.org/docs/cloud-computing-and-infrastructure/aws/lambda/</link>
    <description>Recent content on Novel CS</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://example.org/docs/cloud-computing-and-infrastructure/aws/lambda/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://example.org/docs/cloud-computing-and-infrastructure/aws/lambda/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/cloud-computing-and-infrastructure/aws/lambda/basic/</guid>
      <description>What is a handler? # In AWS Lambda, a handler is a function within your code that AWS Lambda calls to start execution of your function. When you create a Lambda function, you specify a handler, which AWS Lambda uses to know which function to invoke when the Lambda function is triggered. The handler is the entry point for your Lambda function and is responsible for processing the input event and providing an output.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://example.org/docs/cloud-computing-and-infrastructure/aws/lambda/custom_domain/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/cloud-computing-and-infrastructure/aws/lambda/custom_domain/</guid>
      <description>How to deploy a custom domain for the auto-generated Lambda invoke URL? # 06 APR 2022 â€” AWS announced an exciting news of Built-in HTTPS Endpoints for Lambda functions. You can read the original post .
Before this announcement, to expose an HTTP endpoint with a custom domain for your lambda backend you have to use the following AWS resources:
Lambda (application backend) API Gateway (to expose HTTP endpoint) Cloudfront distribution Route 53 Fortunately, with AWS Lambda URLs you no longer need the API Gateway !</description>
    </item>
    
    <item>
      <title></title>
      <link>https://example.org/docs/cloud-computing-and-infrastructure/aws/lambda/layer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/docs/cloud-computing-and-infrastructure/aws/lambda/layer/</guid>
      <description>To upload custom runtime environment, libraries and configurations for Lambda function # Reference: # https://docs.aws.amazon.com/lambda/latest/dg/packaging-layers.html#packaging-layers-paths</description>
    </item>
    
  </channel>
</rss>
